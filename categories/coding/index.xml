<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coding on Bas-Man's Ponderings</title><link>https://bas-man.github.io/categories/coding/</link><description>Recent content in coding on Bas-Man's Ponderings</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 04 Aug 2020 00:00:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/categories/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>CI on Github for Python</title><link>https://bas-man.github.io/post/github-python-action/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/github-python-action/</guid><description>So I finally thought it was time to start doing some continuous intergration testing as well as testing with multiple versions of Python.
I had been looking at using things such as CircleCI or Travis-ci. But I finally decided I would try to use Github&amp;rsquo;s workflow actions.
I did some searching and found some guides. As part of that I evenutally came a cross this link on Github&amp;rsquo;s own docs.</description></item><item><title>Back up your Plex Media Server on Mac OS</title><link>https://bas-man.github.io/post/plex-macos-backup/</link><pubDate>Sat, 16 May 2020 12:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/plex-macos-backup/</guid><description>The Challenge: How to automate the backing up of my Plex Media Server
Solution: A Bash Script
I wanted to automate this process. If I didn&amp;rsquo;t, it probably wouldn&amp;rsquo;t get done.
This script was adapted from another GitHub Gist that I found here.
You will probably need to modify the following variables.
plexDatabase plexPlistFile backupDirectory Pay attention to lines 17 ~ 21. These refer to the possibility that your script may not complete if your machine can go to sleep.</description></item><item><title>Delay Services launch until external drive mount is complete.</title><link>https://bas-man.github.io/post/startup-apple-script/</link><pubDate>Thu, 14 May 2020 14:30:00 +0900</pubDate><guid>https://bas-man.github.io/post/startup-apple-script/</guid><description>The Challenge: How to give Drobo time to mount before processes that need access to it begin and hence block it&amp;rsquo;s mounting by having the mount point in use.
Solution: AppleScript
Why was this an issue for me. Well I have a Drobo drive which is over 75% full. As a result it can take a while to mount and be detected by my old Mac Mini. This would mean that processes that use files from the Drobo would start before it was mounted.</description></item></channel></rss>