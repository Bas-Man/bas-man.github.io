<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Automation on Bas-Man's Ponderings</title><link>https://bas-man.github.io/tags/automation/</link><description>Recent content in Automation on Bas-Man's Ponderings</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 18 Aug 2020 16:10:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Use launchd instead of crontab on your Mac.</title><link>https://bas-man.github.io/post/launchd-instead-of-cron/</link><pubDate>Tue, 18 Aug 2020 16:10:00 +0900</pubDate><guid>https://bas-man.github.io/post/launchd-instead-of-cron/</guid><description>As of Mac OS 10.4 crontab has been depreciated but not ended. So its a good idea to know how to use its replacement under Mac OS. Welcome to Launchd.
This will be a short guide on how to use launchd in a simple form to replace a crontab job. In my case I am automating the backup of my plex server. You can see my previous article here
Launchd has a lot of other features.</description></item><item><title>Publish your next Hugo blog post automatically using Github Actions</title><link>https://bas-man.github.io/post/hugo-auto-publish/</link><pubDate>Sat, 08 Aug 2020 08:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/hugo-auto-publish/</guid><description>The Challenge I wanted to be able to publish a new post that has already been written at a future date, without needing to manaully publish the article.
The Solution Github Actions.
I already push updates to my site using github actions. So I thought why not have articles published in the future after they are written.
A little background. I do all my edits in a private GitHub repo. When I push to master in this repo.</description></item><item><title>Gmail Zapier LINE Notify</title><link>https://bas-man.github.io/docs/gmail-zapier-line-notify/</link><pubDate>Fri, 24 Jul 2020 15:44:35 +0900</pubDate><guid>https://bas-man.github.io/docs/gmail-zapier-line-notify/</guid><description>This documents how I setup intergration between these three services.</description></item><item><title>Back up your Plex Media Server on Mac OS</title><link>https://bas-man.github.io/post/plex-macos-backup/</link><pubDate>Sat, 16 May 2020 12:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/plex-macos-backup/</guid><description>The Challenge: How to automate the backing up of my Plex Media Server
Solution: A Bash Script
I wanted to automate this process. If I didn&amp;rsquo;t, it probably wouldn&amp;rsquo;t get done.
This script was adapted from another GitHub Gist that I found here.
You will probably need to modify the following variables.
plexDatabase plexPlistFile backupDirectory Pay attention to lines 17 ~ 21. These refer to the possibility that your script may not complete if your machine can go to sleep.</description></item><item><title>Delay Services launch until external drive mount is complete.</title><link>https://bas-man.github.io/post/startup-apple-script/</link><pubDate>Thu, 14 May 2020 14:30:00 +0900</pubDate><guid>https://bas-man.github.io/post/startup-apple-script/</guid><description>The Challenge: How to give Drobo time to mount before processes that need access to it begin and hence block it&amp;rsquo;s mounting by having the mount point in use.
Solution: AppleScript
Why was this an issue for me. Well I have a Drobo drive which is over 75% full. As a result it can take a while to mount and be detected by my old Mac Mini. This would mean that processes that use files from the Drobo would start before it was mounted.</description></item></channel></rss>