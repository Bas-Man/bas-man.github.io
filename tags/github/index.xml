<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on Bas-Man's Musings</title><link>https://bas-man.github.io/tags/github/</link><description>Recent content in github on Bas-Man's Musings</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 24 Jun 2021 14:50:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Get MetaCPAN to reference GitHub for Source and Issue Tracking</title><link>https://bas-man.github.io/cheatsheets/perl/snippets/metacpan-meta-data-for-github/</link><pubDate>Mon, 14 Dec 2020 13:00:00 +0900</pubDate><guid>https://bas-man.github.io/cheatsheets/perl/snippets/metacpan-meta-data-for-github/</guid><description>Get MetaCPAN to reference Github for Source and Issues</description></item><item><title>Push to GitHub Triggers Push to Remote</title><link>https://bas-man.github.io/post/git/push-to-github-triggers-push-to-remote/</link><pubDate>Thu, 24 Jun 2021 14:50:00 +0900</pubDate><guid>https://bas-man.github.io/post/git/push-to-github-triggers-push-to-remote/</guid><description>Hi,
Today I would like to go over how I changed things up a bit and am now able to push my site updates to GitHub, which then pushes the updates to the live production server. This should allow me to add checks within GitHub to ensure my site it updated only if everything is correct. Though I won&amp;rsquo;t go into that here today. I will be focusing on the GitHub Action.</description></item><item><title>Auto Update Site from a Git Push</title><link>https://bas-man.github.io/post/git/auto-update-site-from-git-push/</link><pubDate>Tue, 22 Jun 2021 14:40:00 +0900</pubDate><guid>https://bas-man.github.io/post/git/auto-update-site-from-git-push/</guid><description>&lt;p>Hi,&lt;/p>
&lt;p>For a little while now I have been thinking about moving my personal blog to a self-hosted service. One of the options I have been considering is &lt;a href="https://www.linode.com">Linode&lt;/a>.&lt;/p>
&lt;p>As part of this idea. I wanted to see how I might be able to automate some of the processes. This is just a write up on one of my ideas so far.&lt;/p></description></item><item><title>Publish your next Hugo blog post automatically using Github Actions</title><link>https://bas-man.github.io/post/hugo-auto-publish/</link><pubDate>Sat, 08 Aug 2020 08:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/hugo-auto-publish/</guid><description>The Challenge I wanted to be able to publish a new post that has already been written at a future date, without needing to manually publish the article.
The Solution Github Actions.
I already push updates to my site using github actions. So I thought why not have articles published in the future after they are written.
A little background. I do all my edits in a private GitHub repo. When I push to master in this repo.</description></item><item><title>Private Hugo Repo to Public on Github</title><link>https://bas-man.github.io/post/hugo-private-to-public-github/</link><pubDate>Thu, 06 Aug 2020 16:51:00 +0900</pubDate><guid>https://bas-man.github.io/post/hugo-private-to-public-github/</guid><description>I was researching ways of moving to Hugo for my site generator. I looked at a few options and as part of this I came a cross a workflow in github that allows me to store my site in a private repo and then publish the site to a public repo without too much fuss.
You can find the action here
I use the basic example config with minor changes to match my GitHub details.</description></item><item><title>CI on Github for Python</title><link>https://bas-man.github.io/post/github-python-action/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/github-python-action/</guid><description>So I finally thought it was time to start doing some continuous intergration testing as well as testing with multiple versions of Python.
I had been looking at using things such as CircleCI or Travis-ci. But I finally decided I would try to use Github&amp;rsquo;s workflow actions.
I did some searching and found some guides. As part of that I evenutally came a cross this link on Github&amp;rsquo;s own docs.</description></item></channel></rss>