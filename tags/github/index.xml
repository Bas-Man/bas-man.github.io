<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on Bas-Man's Ponderings</title><link>https://bas-man.github.io/tags/github/</link><description>Recent content in github on Bas-Man's Ponderings</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Dec 2020 13:00:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://bas-man.github.io/cheatsheets/git/snippets/metacpan-meta-data-for-github/</link><pubDate>Mon, 14 Dec 2020 13:00:00 +0900</pubDate><guid>https://bas-man.github.io/cheatsheets/git/snippets/metacpan-meta-data-for-github/</guid><description>In Makefile.PL add the eval code
TEST_REQUIRES =&amp;gt; { 'Test::More' =&amp;gt; '0', }, (eval { ExtUtils::MakeMaker-&amp;gt;VERSION(6.46)} ? (META_MERGE =&amp;gt; { 'meta-spec' =&amp;gt; { version =&amp;gt; 2 }, resources =&amp;gt; { repository =&amp;gt; { type =&amp;gt; 'git', url =&amp;gt; 'https://github.com/Bas-Man/File-TVShow-Info.git', web =&amp;gt; 'https://github.com/Bas-Man/File-TVShow-Info', }, bugtracker =&amp;gt; { web =&amp;gt; 'https://github.com/Bas-Man/File-TVShow-Info/issues', }, homepage =&amp;gt; 'https://bas-man.github.io', }, }) : () ),</description></item><item><title>Publish your next Hugo blog post automatically using Github Actions</title><link>https://bas-man.github.io/post/hugo-auto-publish/</link><pubDate>Sat, 08 Aug 2020 08:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/hugo-auto-publish/</guid><description>The Challenge I wanted to be able to publish a new post that has already been written at a future date, without needing to manually publish the article.
The Solution Github Actions.
I already push updates to my site using github actions. So I thought why not have articles published in the future after they are written.
A little background. I do all my edits in a private GitHub repo. When I push to master in this repo.</description></item><item><title>Private Hugo Repo to Public on Github</title><link>https://bas-man.github.io/post/hugo-private-to-public-github/</link><pubDate>Thu, 06 Aug 2020 16:51:00 +0900</pubDate><guid>https://bas-man.github.io/post/hugo-private-to-public-github/</guid><description>I was researching ways of moving to Hugo for my site generator. I looked at a few options and as part of this I came a cross a workflow in github that allows me to store my site in a private repo and then publish the site to a public repo without too much fuss.
You can find the action here
I use the basic example config with minor changes to match my GitHub details.</description></item><item><title>CI on Github for Python</title><link>https://bas-man.github.io/post/github-python-action/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/github-python-action/</guid><description>So I finally thought it was time to start doing some continuous intergration testing as well as testing with multiple versions of Python.
I had been looking at using things such as CircleCI or Travis-ci. But I finally decided I would try to use Github&amp;rsquo;s workflow actions.
I did some searching and found some guides. As part of that I evenutally came a cross this link on Github&amp;rsquo;s own docs.</description></item></channel></rss>