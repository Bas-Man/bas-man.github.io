<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Generics on Bas-Man's Musings</title><link>https://bas-man.github.io/tags/generics/</link><description>Recent content in Generics on Bas-Man's Musings</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 May 2021 00:30:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/generics/index.xml" rel="self" type="application/rss+xml"/><item><title>Swift: Deconstruct SPF: Strings and SubStrings</title><link>https://bas-man.github.io/post/swift/swift-spf-generic-string-function/</link><pubDate>Sat, 22 May 2021 00:30:00 +0900</pubDate><guid>https://bas-man.github.io/post/swift/swift-spf-generic-string-function/</guid><description>&lt;p>I have been working on my SPF project in &lt;strong>Swift&lt;/strong> of late. As part of this I have started to deal with &lt;strong>substrings&lt;/strong>. &amp;ldquo;&lt;em>A slice of a string&lt;/em>&amp;rdquo; according to &lt;a href="https://developer.apple.com/documentation/swift/substring">Apple Documentation&lt;/a>. In dealing with this, I have found myself quite often converting substrings back to normal strings. Today we will look at how we can pass &lt;strong>substrings&lt;/strong> directly by making our functions &lt;strong>generic&lt;/strong>.&lt;/p></description></item><item><title>Deconstructing SPF with Rust using Generics</title><link>https://bas-man.github.io/post/rust/deconstructing-spf-with-rust-using-generics/</link><pubDate>Sat, 10 Apr 2021 23:30:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust/deconstructing-spf-with-rust-using-generics/</guid><description>As I mentioned in my previous article Deconstructing SPF Records with Rust. There is a case for using generics given the amount of overlap between the different mechanisms.
So in this article I will document how I transitioned from using unique structs for each mechanism, leading to less overall code and other benefits.
While I was considering how best to go about doing generics, I came across this very nice write up on dev.</description></item></channel></rss>