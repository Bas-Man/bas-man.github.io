<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>crate on Bas-Man's Musings</title><link>https://bas-man.github.io/tags/crate/</link><description>Recent content in crate on Bas-Man's Musings</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 15 Jun 2021 17:00:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/crate/index.xml" rel="self" type="application/rss+xml"/><item><title>Published My First Crate: decon-spf</title><link>https://bas-man.github.io/post/rust/published-my-first-crate/</link><pubDate>Tue, 15 Jun 2021 17:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust/published-my-first-crate/</guid><description>&lt;p>Today I published my first &lt;strong>rust&lt;/strong> crate.&lt;/p></description></item><item><title>Rust: Add an Example Program to your Library Crate</title><link>https://bas-man.github.io/post/rust/library-with-example-program/</link><pubDate>Sun, 13 Jun 2021 16:45:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust/library-with-example-program/</guid><description>&lt;p>Recently I decided that I might actually publish my little rust crate. To that end I started looking into some of the things that are needed and what can be done. I have published a &lt;strong>perl&lt;/strong> module in the past. And as a rule for myself, I like to provide an example program that uses a &lt;em>module&lt;/em> or &lt;em>library&lt;/em>. That is what I will look at today.&lt;/p></description></item><item><title>TXT lookup using the trust-dns-resolver Crate</title><link>https://bas-man.github.io/post/rust/rust-trust-dns-resolver-txt-lookup/</link><pubDate>Mon, 29 Mar 2021 11:30:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust/rust-trust-dns-resolver-txt-lookup/</guid><description>&lt;p>This is the third article on using the &lt;strong>trust-dns-resolver&lt;/strong> crate&lt;br>
&lt;strong>Warning: This code is not intended to be used in production. You should review and adjust to your own needs.&lt;/strong>&lt;/p></description></item><item><title>SOA lookup using the trust-dns-resolver Crate</title><link>https://bas-man.github.io/post/rust/rust-trust-dns-resolver-soa-lookup/</link><pubDate>Fri, 26 Mar 2021 12:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust/rust-trust-dns-resolver-soa-lookup/</guid><description>&lt;p>This is a second article on using the &lt;strong>trust-dns-resolver&lt;/strong> crate&lt;br>
&lt;strong>Warning: This code is not intended to be used in production. You should review and adjust to your own needs.&lt;/strong>&lt;/p></description></item><item><title>MX and Host lookup using the trust-dns-resolver Crate</title><link>https://bas-man.github.io/post/rust/rust-trust-dns-resolver-mx-and-host-lookup/</link><pubDate>Thu, 25 Mar 2021 15:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust/rust-trust-dns-resolver-mx-and-host-lookup/</guid><description>I used to often work with DNS in one of my previous jobs. So I have always had a long running interesting in DNS. Most recently I have been looking into Rust. I wanted to see how easy it might be to use rust to access DNS records, one; because rust is said to be fast, and also because it&amp;rsquo;s a safe programming language.
This will be a brief write up at my attempt to use trust-dns-resolver to do MX record lookups and subsequently host address lookups.</description></item></channel></rss>