<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Bas-Man's Ponderings</title><link>https://bas-man.github.io/tags/python/</link><description>Recent content in Python on Bas-Man's Ponderings</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 04 Aug 2020 00:00:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://bas-man.github.io/cheatsheets/python/snippets/mock-python-version/</link><pubDate>Tue, 07 Jul 2020 23:55:00 +0900</pubDate><guid>https://bas-man.github.io/cheatsheets/python/snippets/mock-python-version/</guid><description>Mock Python Version for testing.</description></item><item><title/><link>https://bas-man.github.io/cheatsheets/python/snippets/padding-numbers/</link><pubDate>Tue, 07 Jul 2020 23:55:00 +0900</pubDate><guid>https://bas-man.github.io/cheatsheets/python/snippets/padding-numbers/</guid><description>Padding Numbers &amp;gt;&amp;gt;&amp;gt; n = 4 &amp;gt;&amp;gt;&amp;gt; print(f&amp;#39;{n:03}&amp;#39;) # Preferred method, python &amp;gt;= 3.6 004 &amp;gt;&amp;gt;&amp;gt; print(&amp;#39;%03d&amp;#39; % n) 004 &amp;gt;&amp;gt;&amp;gt; print(format(n, &amp;#39;03&amp;#39;)) # python &amp;gt;= 2.6 004 &amp;gt;&amp;gt;&amp;gt; print(&amp;#39;{0:03d}&amp;#39;.format(n)) # python &amp;gt;= 2.6 + python 3 004 &amp;gt;&amp;gt;&amp;gt; print(&amp;#39;{foo:03d}&amp;#39;.format(foo=n)) # python &amp;gt;= 2.6 + python 3 004 &amp;gt;&amp;gt;&amp;gt; print(&amp;#39;{:03d}&amp;#39;.format(n)) # python &amp;gt;= 2.7 + python3 004 Reference: Stack Overflow</description></item><item><title/><link>https://bas-man.github.io/cheatsheets/python/snippets/qr-code/</link><pubDate>Tue, 07 Jul 2020 23:55:00 +0900</pubDate><guid>https://bas-man.github.io/cheatsheets/python/snippets/qr-code/</guid><description>Generate QR Codes I want to try and do something with this eventually. Looks very useful.
Source
Required imports:
pip install pillow pip install qrcode Code Sample:
import qrcode # Link for website input_data = &amp;#34;https://towardsdatascience.com/face-detection-in-10-lines-for-beginners-1787aa1d9127&amp;#34; #Creating an instance of qrcode qr = qrcode.QRCode( version=1, box_size=10, border=5) qr.add_data(input_data) qr.make(fit=True) img = qr.make_image(fill=&amp;#39;black&amp;#39;, back_color=&amp;#39;white&amp;#39;) img.save(&amp;#39;qrcode001.png&amp;#39;)</description></item><item><title>CI on Github for Python</title><link>https://bas-man.github.io/post/github-python-action/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/github-python-action/</guid><description>So I finally thought it was time to start doing some continuous intergration testing as well as testing with multiple versions of Python.
I had been looking at using things such as CircleCI or Travis-ci. But I finally decided I would try to use Github&amp;rsquo;s workflow actions.
I did some searching and found some guides. As part of that I evenutally came a cross this link on Github&amp;rsquo;s own docs.</description></item></channel></rss>