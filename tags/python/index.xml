<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Bas-Man's Musings</title><link>https://bas-man.github.io/tags/python/</link><description>Recent content in Python on Bas-Man's Musings</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Tue, 12 Jan 2021 16:00:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Working with double-byte regex expressions with Python3</title><link>https://bas-man.github.io/post/regex-double-byte-python3/</link><pubDate>Tue, 05 Jan 2021 12:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/regex-double-byte-python3/</guid><description>
&lt;p>As part of my project &lt;a href="https://bas-man.github.io/post/self-hosted-zapier-alternative/">Self Hosted Zapier Alternative&lt;/a>; I am having to deal with doing regex searches against the three Japanese written forms, Kanji, Hiragana and Katakana.&lt;/p>
&lt;p>Fortunately this is a common problem. So I have found some references for this.
Also one of my favourite tools for developing regex expressions, &lt;a href="https://regex101.com">Regex101&lt;/a>, also offers support in this area.&lt;/p>
&lt;p>I found this useful &lt;a href="https://github.com">Github&lt;/a> Gist.&lt;br>
&lt;strong>note:&lt;/strong>&lt;br>
You should also check the gist directly as there are some follow up comments and
additions. See &lt;a href="https://gist.github.com/terrancesnyder/1345094">here&lt;/a>&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/terrancesnyder/1345094.js">&lt;/script>
&lt;p>Using Regex101 I was able to come up with the following expression.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Python3" data-lang="Python3">&lt;span class="ln">1&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="err">「&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="n">P&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">busname&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">一&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">龯&lt;/span>&lt;span class="p">]&lt;/span>\&lt;span class="n">d&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">})&lt;/span>\&lt;span class="n">s&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="n">P&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">destination&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">一&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">龯&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">行き&lt;/span>&lt;span class="err">・&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="n">P&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">boardedat&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">一&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">龯&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">」&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will successfully match a string such as:&lt;br>
&lt;code>「渋11 渋谷駅行き・駒沢大学駅前」でタッチしました。&lt;/code>
 &lt;br>
Resulting in the following three groups.&lt;br>
&lt;em>busname&lt;/em> = 渋11&lt;br>
&lt;em>destination&lt;/em> = 渋谷駅&lt;br>
&lt;em>boardedat&lt;/em> = 駒沢大学駅&lt;/p>
&lt;p>If you are working in PHP you can also use the following:&lt;br>
&lt;code>\p{Han}&lt;/code> (Using Chinese to match Kanji)&lt;br>
&lt;code>\p{Hiragana}&lt;/code>&lt;br>
&lt;code>\p{Katakana}&lt;/code>&lt;/p>
&lt;p>You can also checkout my Regex Experiments:&lt;br>
&lt;a href="https://regex101.com/r/YkltWH/1">v1&lt;/a> PHP&lt;br>
&lt;a href="https://regex101.com/r/YkltWH/2">v2&lt;/a> Python3&lt;/p></description></item><item><title>Project: Self Hosted Zapier Alternative</title><link>https://bas-man.github.io/post/self-hosted-zapier-alternative/</link><pubDate>Sat, 02 Jan 2021 23:00:39 +0900</pubDate><guid>https://bas-man.github.io/post/self-hosted-zapier-alternative/</guid><description>
&lt;p>I am currently in the process of working out how I might replace some of my Zapier services. Why would I want to do this?&lt;/p>
&lt;ol>
&lt;li>I use the free tier. (The process only runs once every 15 minutes. It used to be once every 5 mins.) Which means it has become a bit slow in sending the notifications.&lt;/li>
&lt;li>I want to learn how to use &lt;a href="https://www.docker.com">Docker&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Once I get a bit further along I will hopefully publish the python code to &lt;a href="https://github.com">GitHub&lt;/a> and document some of the issues and successes as I move along. Check the &lt;a href="https://bas-man.github.io/projects/">Projects page&lt;/a> section if you are interested.&lt;/p></description></item><item><title>Send a notification through LINE with AppDaemon with Home Assistant</title><link>https://bas-man.github.io/post/home-assistant-adddaemon-line-notification/</link><pubDate>Thu, 17 Dec 2020 23:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/home-assistant-adddaemon-line-notification/</guid><description>
&lt;h1 id="the-challenge">The challenge&lt;/h1>
&lt;p>Living in Japan we generally default to using &lt;a href="https://mobile.line.me">LINE&lt;/a> for our messaging needs. At the time of this writing there is no integration for LINE within &lt;a href="https://www.home-assistant.io">Home Assistant&lt;/a>. Currently I use &lt;a href="https://pushover.net">PushOver&lt;/a> for some of my Home Assistant notifications. I also use &lt;a href="https://zapier.com">Zapier&lt;/a> with email to trigger notifications to my family LINE group. You can see how I did this &lt;a href="https://dev.to/basman/integrating-line-message-and-zapier-58e6">here&lt;/a> and &lt;a href="https://gmailzapierlinenotify.readthedocs.io/en/latest/">here&lt;/a>.&lt;/p>
&lt;p>I also track some &lt;a href="https://www.thetileapp.com/">Tile&lt;/a> devices to know when family members are home. And of course I want to keep an eye on the younger members. Know when they leave home, get home and such. I want my wife and myself to get these notifications.&lt;/p>
&lt;p>Since we already have a LINE group for other notifications. I thought it would be good to just add these to the existing group, and avoid paying for, and installing additional software on to my wife's phone.&lt;/p>
&lt;p>I have previously used &lt;a href="https://pypi.org/project/line_notify/">line_notify&lt;/a> from &lt;a href="https://pypi.org/">pypyi.org&lt;/a> to send some notifications using Python.&lt;/p>
&lt;p>But getting this Python module directly connected with Home Assistant is not possible.&lt;/p>
&lt;h1 id="the-solution">The solution&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://appdaemon.readthedocs.io/en/latest/">AppDaemon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pypi.org/project/line_notify/">line_notify&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Following some research I found AppDaemon might meet my needs. AppDaemon is a sandboxed python environment that can be integrated with Home Assistant and has access to entity state and can monitor events within Home Assistant. It also allows you to import external Python modules. Yay. I can use line_notify.&lt;/p>
&lt;h2 id="how-i-got-it-done">How I got it done&lt;/h2>
&lt;ol>
&lt;li>Install AppDaemon. This will vary based on your setup. There is plenty of documentation on this.&lt;/li>
&lt;li>Add line_notify to the Python modules list in AppDaemon's configuration pane.
&lt;figure>
&lt;img src="https://bas-man.github.io/images/PythonPackages.png"/>
&lt;/figure>
&lt;/li>
&lt;li>Generate your Line Bot Token. See my previous &lt;a href="https://dev.to/basman/integrating-line-message-and-zapier-58e6">article&lt;/a> or &lt;a href="https://gmailzapierlinenotify.readthedocs.io/en/latest/">Read the Docs&lt;/a>. Remember to store it somewhere safe.&lt;/li>
&lt;li>Create your new AppDaemon app.&lt;/li>
&lt;/ol>
&lt;h3 id="creating-the-app">Creating the App&lt;/h3>
&lt;p>The coding will be done in your Home Assistant's &lt;strong>appdaemon&lt;/strong> folder located under your &lt;strong>config&lt;/strong> folder. If you need a visual guide. I would direct you to the YouTube link below.&lt;/p>
&lt;p>First let's make sure you have your timezone and location information setup correctly. Locate and open your &lt;strong>appdaemon.yaml&lt;/strong> file. In my case my timezone is &lt;em>Asia/Tokyo&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="ln"> 1&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">secrets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/config/secrets.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">appdaemon&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">latitude&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">XX&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">longitude&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">YY&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">elevation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">time_zone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Asia/Tokyo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">plugins&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 9&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">HASS&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hass&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">11&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ha_url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://192.168.X.X:8123&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">12&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>!&lt;span class="l">secret appdaemon&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">13&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app_init_delay&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">14&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">15&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://127.0.0.1:5050&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">16&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">admin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">17&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">api&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">18&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">hadashboard&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong>
Latitude and Longitude could be referenced from your &lt;strong>secrets.yaml&lt;/strong> file and actually, they should be.
Having an incorrect timezone setting may result in unexpected behaviour.&lt;/p>
&lt;p>Next open &lt;strong>apps.yaml&lt;/strong> in the &lt;strong>apps&lt;/strong> folder.
Assuming this a fresh setup, there should just be the hello_world app. So we will be adding a new app below it.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="ln">1&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">hello_world&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">module&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hello&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">class&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HelloWorld&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">5&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">line_notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">module&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">line_message&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">class&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">LineMessage&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>line_notify -&amp;gt; App Name&lt;/li>
&lt;li>line_message -&amp;gt; module name. file will be named &lt;em>line_message.py&lt;/em>&lt;/li>
&lt;li>LineMessage -&amp;gt; Class name used within &lt;em>line_message.py&lt;/em>&lt;/li>
&lt;/ol>
&lt;p>Next copy hello.py to make a new file.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>cp hello.py line_message.py
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open the new file and add the following code.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="ln"> 1&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">appdaemon.plugins.hass.hassapi&lt;/span> &lt;span class="kn">as&lt;/span> &lt;span class="nn">hass&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="kn">from&lt;/span> &lt;span class="nn">line_notify&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">LineNotify&lt;/span>
&lt;span class="ln"> 3&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="n">LINE_TOKEN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;LINE BOT TOKEN GENERATED PREVIOUSLY&amp;#34;&lt;/span>
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="nc">LineMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Hass&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 7&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Starting Line Message Service.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen_state&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">person1_home_send&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;device_tracker.person1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;home&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen_state&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">person1_away_send&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;device_tracker.person1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;not_home&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">12&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">person1_home_send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">entity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">attribute&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">kwargs&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now_is_between&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;07:50:00&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;21:00:00&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Person1 has arrived Home.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">person1_away_send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">entity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">attribute&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">kwargs&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now_is_between&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;07:50:00&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;20:00:00&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Person1 has left Home.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">19&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">send_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="s2">&amp;#34;Sending message {message}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="n">notify&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LineNotify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LINE_TOKEN&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="n">notify&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Finished sending message&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="what-does-this-code-do">What does this code do?&lt;/h3>
&lt;ul>
&lt;li>Unfortunately the Token needs to be hardcoded. From my reading there is currently no way around this.&lt;/li>
&lt;li>initialize.
&lt;ul>
&lt;li>This method is &lt;strong>required&lt;/strong>. If is missing nothing will happen. In this case we are saying the following.&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>When device_tracker.person1 changes to &lt;em>home&lt;/em> call the method named &lt;em>person1_home_send&lt;/em>&lt;/li>
&lt;li>When device_tracker.person1 changes to &lt;em>not_home&lt;/em> call the method named &lt;em>person1_away_send&lt;/em>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>person1_home_send
&lt;ul>
&lt;li>If this event takes place between 7:50am and 9pm call the &lt;em>send_message&lt;/em> method with the argument provided.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>person1_away_send
&lt;ul>
&lt;li>If this event takes place between 7:50am and 8pm call the &lt;em>send_message&lt;/em> method with the argument provided.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>send_message
&lt;ul>
&lt;li>This takes the message string as input. Creates the notify object needed to send the message to LINE and then sends it.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>This completes the coding of the app. Go back to Home Assistant and restart the AppDaemon.&lt;/p>
&lt;p>This code can easily be expanded for more use cases.&lt;/p>
&lt;h1 id="references">References&lt;/h1>
&lt;ul>
&lt;li>YouTube: &lt;a href="https://www.youtube.com/watch?v=GVIS7GtqLpo">here&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://notify-bot.line.me/en/">Line Notify Bot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://notify-bot.line.me/doc/en/">Line Notify Bot Documentation&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>CI on Github for Python</title><link>https://bas-man.github.io/post/github-python-action/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/github-python-action/</guid><description>
&lt;p>So I finally thought it was time to start doing some continuous intergration testing as well as testing with multiple versions of Python.&lt;/p>
&lt;p>I had been looking at using things such as &lt;a href="https://circleci.com">CircleCI&lt;/a> or &lt;a href="https://travis-ci.org">Travis-ci&lt;/a>. But I finally decided I would try to use Github's workflow actions.&lt;/p>
&lt;p>I did some searching and found some guides. As part of that I evenutally came a cross &lt;a href="https://docs.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions">this link&lt;/a> on Github's own docs.&lt;/p>
&lt;p>Based on these examples. I started working on my own workflow. This is a very lightly modified version of one found on Github. So it's not at all original.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="ln"> 1&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Python package&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">development ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 6&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 7&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 9&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">11&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">strategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">12&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matrix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">13&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">python-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">3.5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3.6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3.7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3.8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">14&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">15&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">16&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">17&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Set up Python ${{ matrix.python-version }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">18&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-python@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">19&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">20&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">python-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.python-version }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">21&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Install dependencies&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">22&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="ln">23&lt;/span>&lt;span class="sd"> python -m pip install --upgrade pip
&lt;/span>&lt;span class="ln">24&lt;/span>&lt;span class="sd"> # Add modules required for testing.
&lt;/span>&lt;span class="ln">25&lt;/span>&lt;span class="sd"> pip install pytest pyscaffold==3.2.3 coverage pytest-cov
&lt;/span>&lt;span class="ln">26&lt;/span>&lt;span class="sd"> # Add modules required for functionality.
&lt;/span>&lt;span class="ln">27&lt;/span>&lt;span class="sd"> if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
&lt;/span>&lt;span class="ln">28&lt;/span>&lt;span class="sd"> pip install -e .&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">29&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Test with pytest&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">30&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="ln">31&lt;/span>&lt;span class="sd"> &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pytest&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">32&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Basically this will test the module running under several virtual machines running the four versions of python listed. Note that I am not running the code through a linter at this stage. You can see examples of that in the Github guide.&lt;/p></description></item></channel></rss>