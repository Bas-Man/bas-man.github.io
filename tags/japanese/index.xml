<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>japanese on Bas-Man's Musings</title><link>https://bas-man.github.io/tags/japanese/</link><description>Recent content in japanese on Bas-Man's Musings</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Tue, 05 Jan 2021 12:00:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/japanese/index.xml" rel="self" type="application/rss+xml"/><item><title>Working with double-byte regex expressions with Python3</title><link>https://bas-man.github.io/post/regex-double-byte-python3/</link><pubDate>Tue, 05 Jan 2021 12:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/regex-double-byte-python3/</guid><description>
&lt;p>As part of my project &lt;a href="https://bas-man.github.io/post/self-hosted-zapier-alternative/">Self Hosted Zapier Alternative&lt;/a>; I am having to deal with doing regex searches against the three Japanese written forms, Kanji, Hiragana and Katakana.&lt;/p>
&lt;p>Fortunately this is a common problem. So I have found some references for this.
Also one of my favourite tools for developing regex expressions, &lt;a href="https://regex101.com">Regex101&lt;/a>, also offers support in this area.&lt;/p>
&lt;p>I found this useful &lt;a href="https://github.com">Github&lt;/a> Gist.&lt;br>
&lt;strong>note:&lt;/strong>&lt;br>
You should also check the gist directly as there are some follow up comments and
additions. See &lt;a href="https://gist.github.com/terrancesnyder/1345094">here&lt;/a>&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/terrancesnyder/1345094.js">&lt;/script>
&lt;p>Using Regex101 I was able to come up with the following expression.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Python3" data-lang="Python3">&lt;span class="ln">1&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="err">「&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="n">P&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">busname&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">一&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">龯&lt;/span>&lt;span class="p">]&lt;/span>\&lt;span class="n">d&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">})&lt;/span>\&lt;span class="n">s&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="n">P&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">destination&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">一&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">龯&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">行き&lt;/span>&lt;span class="err">・&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="n">P&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">boardedat&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">一&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">龯&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">」&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will successfully match a string such as:&lt;br>
&lt;code>「渋11 渋谷駅行き・駒沢大学駅前」でタッチしました。&lt;/code>
 &lt;br>
Resulting in the following three groups.&lt;br>
&lt;em>busname&lt;/em> = 渋11&lt;br>
&lt;em>destination&lt;/em> = 渋谷駅&lt;br>
&lt;em>boardedat&lt;/em> = 駒沢大学駅&lt;/p>
&lt;p>If you are working in PHP you can also use the following:&lt;br>
&lt;code>\p{Han}&lt;/code> (Using Chinese to match Kanji)&lt;br>
&lt;code>\p{Hiragana}&lt;/code>&lt;br>
&lt;code>\p{Katakana}&lt;/code>&lt;/p>
&lt;p>You can also checkout my Regex Experiments:&lt;br>
&lt;a href="https://regex101.com/r/YkltWH/1">v1&lt;/a> PHP&lt;br>
&lt;a href="https://regex101.com/r/YkltWH/2">v2&lt;/a> Python3&lt;/p></description></item></channel></rss>