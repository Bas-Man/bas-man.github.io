<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dns on Bas-Man's Musings</title><link>https://bas-man.github.io/tags/dns/</link><description>Recent content in dns on Bas-Man's Musings</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 10 Apr 2021 23:30:00 +0900</lastBuildDate><atom:link href="https://bas-man.github.io/tags/dns/index.xml" rel="self" type="application/rss+xml"/><item><title>Using trust-dns-resolver to do mx lookups</title><link>https://bas-man.github.io/cheatsheets/rust/snippets/trust-dns-resolver-mx/</link><pubDate>Thu, 25 Mar 2021 16:30:00 +0900</pubDate><guid>https://bas-man.github.io/cheatsheets/rust/snippets/trust-dns-resolver-mx/</guid><description>Using trust-dns-resolver to do mx lookups</description></item><item><title>Using trust-dns-resolver to do soa lookups</title><link>https://bas-man.github.io/cheatsheets/rust/snippets/trust-dns-resolver-soa/</link><pubDate>Thu, 25 Mar 2021 16:30:00 +0900</pubDate><guid>https://bas-man.github.io/cheatsheets/rust/snippets/trust-dns-resolver-soa/</guid><description>Using trust-dns-resolver to do soa lookups</description></item><item><title>Deconstructing SPF with Rust using Generics</title><link>https://bas-man.github.io/post/deconstructing-spf-with-rust-using-generics/</link><pubDate>Sat, 10 Apr 2021 23:30:00 +0900</pubDate><guid>https://bas-man.github.io/post/deconstructing-spf-with-rust-using-generics/</guid><description>As I mentioned in my previous article Deconstructing SPF Records with Rust. There is a case for using generics given the amount of overlap between the different mechanisms.
So in this article I will document how I transitioned from using unique structs for each mechanism, leading to less overall code and other benefits.
While I was considering how best to go about doing generics, I came across this very nice write up on dev.</description></item><item><title>Deconstructing SPF Records with Rust</title><link>https://bas-man.github.io/post/deconstructing-spf-with-rust/</link><pubDate>Thu, 08 Apr 2021 10:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/deconstructing-spf-with-rust/</guid><description>Hi. If you have visited my blog before you might have seen my series on using the trust-dns-resolver crate. As part of that series I looked at querying DNS TXT records. During the process I was reminded of SPF records. Something I used to deal with in a previous position. And this got me to thinking about using SPF records as a way to learn more about working with rust.</description></item><item><title>TXT lookup using the trust-dns-resolver Crate</title><link>https://bas-man.github.io/post/rust-trust-dns-resolver-txt-lookup/</link><pubDate>Mon, 29 Mar 2021 11:30:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust-trust-dns-resolver-txt-lookup/</guid><description>This is the third article on using the trust-dns-resolver crate.</description></item><item><title>SOA lookup using the trust-dns-resolver Crate</title><link>https://bas-man.github.io/post/rust-trust-dns-resolver-soa-lookup/</link><pubDate>Fri, 26 Mar 2021 12:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust-trust-dns-resolver-soa-lookup/</guid><description>This is a second article on using the trust-dns-resolver crate.</description></item><item><title>MX and Host lookup using the trust-dns-resolver Crate</title><link>https://bas-man.github.io/post/rust-trust-dns-resolver-mx-and-host-lookup/</link><pubDate>Thu, 25 Mar 2021 15:00:00 +0900</pubDate><guid>https://bas-man.github.io/post/rust-trust-dns-resolver-mx-and-host-lookup/</guid><description>I used to often work with DNS in one of my previous jobs. So I have always had a long running interesting in DNS. Most recently I have been looking into Rust. I wanted to see how easy it might be to use rust to access DNS records, one; because rust is said to be fast, and also because it&amp;rsquo;s a safe programming language.
This will be a brief write up at my attempt to use trust-dns-resolver to do MX record lookups and subsequently host address lookups.</description></item></channel></rss>